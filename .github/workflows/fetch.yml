name: fetch-open-data

on:
  schedule: [{ cron: "*/30 * * * *" }]   # cada 30 min (UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Instalar jq y curl
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Crear carpetas
        run: mkdir -p data/bl1 data/media

      # 1) Jornada actual Bundesliga
      - name: OpenLigaDB current matchday
        run: curl --max-time 20 --retry 3 -fsSL "https://www.openligadb.de/api/getcurrentgroup/bl1" -o data/bl1/current.json

      # 2) Partidos: detecta temporada y baja MD actual y vecinas
      - name: OpenLigaDB matches for current and neighbors
        run: |
          set -e
          MD=$(jq -r '.GroupOrderID' data/bl1/current.json)

          # Detecta temporada con datos (2025 primero, luego 2024)
          for Y in 2025 2024; do
            echo "Probando temporada $Y, jornada $MD"
            curl --max-time 20 --retry 3 -fsSL "https://www.openligadb.de/api/getmatchdata/bl1/${Y}/${MD}" -o "data/bl1/md-${MD}.json" || echo "fallo"
            BYTES=$(wc -c < "data/bl1/md-${MD}.json" || echo 0)
            if [ "$BYTES" -gt 2 ]; then SEASON=$Y; break; fi
          done

          if [ -z "$SEASON" ]; then
            echo "No hay datos para MD=$MD en 2025/2024"; exit 0
          fi

          echo "Temporada detectada: $SEASON"
          for D in $(seq $((MD-1)) $((MD+1))); do
            [ "$D" -gt 0 ] || continue
            curl --max-time 20 --retry 3 -fsSL "https://www.openligadb.de/api/getmatchdata/bl1/${SEASON}/${D}" \
              -o "data/bl1/md-${D}.json" || true
          done

          ls -l data/bl1/

      # 3) Equipos de la temporada (2025 o 2024)
      - name: OpenLigaDB teams
        run: |
          for Y in 2025 2024; do
            curl --max-time 20 --retry 3 -fsSL "https://www.openligadb.de/api/getavailableteams/bl1/${Y}" -o data/bl1/teams.json || true
            BYTES=$(wc -c < data/bl1/teams.json || echo 0)
            if [ "$BYTES" -gt 2 ]; then echo "Teams de $Y"; break; fi
          done

      # 4) Escudos y estadios desde TheSportsDB (API free key 123)
      - name: Media (teams + stadium thumbs)
        run: |
          curl --max-time 20 --retry 3 -fsSL "https://www.thesportsdb.com/api/v1/json/123/search_all_teams.php?l=German%20Bundesliga" \
          | jq '{teams: [.teams[] | {id:.idTeam, name:.strTeam, badge:.strTeamBadge, stadium:.strStadium, stadiumThumb:.strStadiumThumb}]}' \
          > data/media/teams.json

      - name: Commit y push si hay cambios
        run: |
          git add data/
          git diff --quiet || git commit -m "Update data" && git push
